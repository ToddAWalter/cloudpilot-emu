interface Uarm {
    void Uarm();

    [Ref] Uarm SetRamSize(long size);
    [Ref] Uarm SetNand(long size, VoidPtr data);
    [Ref] Uarm SetMemory(long size, VoidPtr data);
    [Ref] Uarm SetSavestate(long size, VoidPtr data);
    [Ref] Uarm SetSd(long size, VoidPtr data, [Const] DOMString id);
    [Ref] Uarm SetDefaultMips(long defaultMips);

    boolean Launch(long romSize, VoidPtr romData);

    void Cycle(unsigned long long now);

    VoidPtr GetFrame();
    void ResetFrame();

    unsigned long GetTimesliceSizeUsec();

    void PenDown(long x, long y);
    void PenUp();

    unsigned long CurrentIps();
    unsigned long long CurrentIpsMax();
    void SetMaxLoad(unsigned long maxLoad);
    void SetCyclesPerSecondLimit(unsigned long cyclesPerSecondLimit);

    unsigned long long GetTimestampUsec();

    void KeyDown(long key);
    void KeyUp(long key);

    unsigned long PendingSamples();
    VoidPtr PopQueuedSamples();
    void SetPcmOutputEnabled(boolean enabled);
    void SetPcmSuspended(boolean suspended);

    unsigned long GetRomDataSize();
    VoidPtr GetRomData();

    unsigned long GetNandDataSize();
    VoidPtr GetNandData();
    VoidPtr GetNandDirtyPages();
    boolean IsNandDirty();
    void SetNandDirty(boolean isDirty);

    unsigned long GetSdCardDataSize();
    VoidPtr GetSdCardData();
    VoidPtr GetSdCardDirtyPages();
    boolean IsSdCardDirty();
    void SetSdCardDirty(boolean isDirty);

    unsigned long GetRamDataSize();
    VoidPtr GetRamData();
    VoidPtr GetRamDirtyPages();

    unsigned long GetDeviceType();

    boolean SdCardInsert(VoidPtr data, long length, [Const] DOMString id);
    void SdCardEject();
    void Reset();

    void Save();
    unsigned long GetSavestateSize();
    VoidPtr GetSavestateData();
    boolean IsSdInserted();

    unsigned long GetRamSize();

    unsigned long InstallDatabase(unsigned long len, VoidPtr data);

    DbBackup NewDbBackup(long type);
};

interface SessionFile {
    void SessionFile();

    boolean IsSessionFile(long size, [Const] VoidPtr data);

    long GetDeviceId();
    [Ref] SessionFile SetDeviceId(long deviceId);

    [Const] VoidPtr GetMetadata();
    long GetMetadataSize();
    [Ref] SessionFile SetMetadata(long size, [Const] VoidPtr data);

    [Const] VoidPtr GetNor();
    long GetNorSize();
    [Ref] SessionFile SetNor(long size, [Const] VoidPtr data);

    [Const] VoidPtr GetNand();
    long GetNandSize();
    [Ref] SessionFile SetNand(long size, [Const] VoidPtr data);

    [Const] VoidPtr GetMemory();
    long GetMemorySize();
    [Ref] SessionFile SetMemory(long size, [Const] VoidPtr data);

    [Const] VoidPtr GetSavestate();
    long GetSavestateSize();
    [Ref] SessionFile SetSavestate(long size, [Const] VoidPtr data);

    long GetRamSize();
    [Ref] SessionFile SetRamSize(long size);

    boolean Serialize();
    [Const] VoidPtr GetSerializedSession();
    long GetSerializedSessionSize();

    boolean Deserialize(long Size, [Const] VoidPtr data);
};

interface DbBackup {
    boolean Init();

    long GetState();
    boolean Continue();
    boolean HasLastProcessedDb();
    [Const] DOMString GetLastProcessedDb();

    [Const] VoidPtr GetArchiveData();
    long GetArchiveSize();
};
